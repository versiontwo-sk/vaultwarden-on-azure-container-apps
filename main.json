{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westeurope",
      "metadata": { "description": "The Azure region to install resources." }
    },
    "adminToken": {
      "type": "securestring",
      "metadata": { "description": "The password to access the /admin page." }
    },
    "smtpHost": {
      "type": "string",
      "metadata": { "description": "The hostname of the SMTP server." }
    },
    "smtpFrom": {
      "type": "string",
      "metadata": { "description": "The sender email address for SMTP." }
    },
    "smtpPort": {
      "type": "string",
      "defaultValue": "587",
      "metadata": { "description": "SMTP server port (default: 587)." }
    },
    "smtpSecurity": {
      "type": "string",
      "defaultValue": "starttls",
      "metadata": { "description": "SMTP security (starttls, force_tls, or off)." }
    },
    "smtpUsername": {
      "type": "string",
      "metadata": { "description": "SMTP username." }
    },
    "smtpPassword": {
      "type": "securestring",
      "metadata": { "description": "SMTP password." }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "storageVaultWarden",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": { "name": "Standard_LRS" },
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "storageVaultWarden/default/vaultwardenShare",
      "properties": { "enabledProtocols": "SMB", "shareQuota": 1024 },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', 'storageVaultWarden')]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "vaultWardenLogAnalytics",
      "location": "[parameters('location')]",
      "properties": {
        "sku": { "name": "PerGB2018" },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "managedEnvironmentVaultWarden",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', 'vaultWardenLogAnalytics'), '2022-10-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', 'vaultWardenLogAnalytics'), '2022-10-01').primarySharedKey]"
          }
        }
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments/storages",
      "apiVersion": "2023-05-01",
      "name": "managedEnvironmentVaultWarden/vaultwardenStorage",
      "properties": {
        "azureFile": {
          "accessMode": "ReadWrite",
          "shareName": "vaultwardenShare",
          "accountName": "storageVaultWarden",
          "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', 'storageVaultWarden'), '2023-01-01').keys[0].value]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', 'storageVaultWarden', 'default', 'vaultwardenShare')]",
        "[resourceId('Microsoft.App/managedEnvironments', 'managedEnvironmentVaultWarden')]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "vaultWardenApp",
      "location": "[parameters('location')]",
      "properties": {
        "environmentId": "[resourceId('Microsoft.App/managedEnvironments', 'managedEnvironmentVaultWarden')]",
        "configuration": {
          "secrets": [
            {
              "name": "admintoken",
              "value": "[parameters('adminToken')]"
            },
            {
              "name": "smtppassword",
              "value": "[parameters('smtpPassword')]"
            }
          ],
          "ingress": {
            "external": true,
            "allowInsecure": false,
            "targetPort": 80,
            "transport": "auto",
            "traffic": [
              {
                "weight": 100,
                "latestRevision": true
              }
            ]
          }
        },
        "template": {
          "containers": [
            {
              "name": "vaultwardenContainer",
              "image": "docker.io/vaultwarden/server:latest",
              "resources": {
                "cpu": "0.25",
                "memory": "0.5Gi"
              },
              "env": [
                {
                  "name": "ENABLE_DB_WAL",
                  "value": "true"
                },
                {
                  "name": "ADMIN_TOKEN",
                  "secretRef": "admintoken"
                },
                {
                  "name": "SMTP_HOST",
                  "value": "[parameters('smtpHost')]"
                },
                {
                  "name": "SMTP_FROM",
                  "value": "[parameters('smtpFrom')]"
                },
                {
                  "name": "SMTP_PORT",
                  "value": "[parameters('smtpPort')]"
                },
                {
                  "name": "SMTP_SECURITY",
                  "value": "[parameters('smtpSecurity')]"
                },
                {
                  "name": "SMTP_USERNAME",
                  "value": "[parameters('smtpUsername')]"
                },
                {
                  "name": "SMTP_PASSWORD",
                  "secretRef": "smtppassword"
                }
              ],
              "volumeMounts": [
                {
                  "volumeName": "vaultwardenStorage",
                  "mountPath": "/data"
                }
              ]
            }
          ],
          "volumes": [
            {
              "name": "vaultwardenStorage",
              "storageName": "vaultwardenStorage",
              "storageType": "AzureFile"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.App/managedEnvironments', 'managedEnvironmentVaultWarden')]",
        "[resourceId('Microsoft.App/managedEnvironments/storages', 'managedEnvironmentVaultWarden', 'vaultwardenStorage')]"
      ]
    }
  ]
}
